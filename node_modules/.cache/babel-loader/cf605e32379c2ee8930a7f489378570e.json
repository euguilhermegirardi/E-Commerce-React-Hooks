{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nfunction _typeof(a) {\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (a) {\n    return typeof a;\n  } : function (a) {\n    return a && \"function\" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? \"symbol\" : typeof a;\n  }, _typeof(a);\n}\n\nfunction _classCallCheck(a, b) {\n  if (!(a instanceof b)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(a, b) {\n  for (var c, d = 0; d < b.length; d++) c = b[d], c.enumerable = c.enumerable || !1, c.configurable = !0, \"value\" in c && (c.writable = !0), Object.defineProperty(a, c.key, c);\n}\n\nfunction _createClass(a, b, c) {\n  return b && _defineProperties(a.prototype, b), c && _defineProperties(a, c), a;\n}\n\nfunction _defineProperty(a, b, c) {\n  return b in a ? Object.defineProperty(a, b, {\n    value: c,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : a[b] = c, a;\n}\n\nfunction ownKeys(a, b) {\n  var c = Object.keys(a);\n\n  if (Object.getOwnPropertySymbols) {\n    var d = Object.getOwnPropertySymbols(a);\n    b && (d = d.filter(function (b) {\n      return Object.getOwnPropertyDescriptor(a, b).enumerable;\n    })), c.push.apply(c, d);\n  }\n\n  return c;\n}\n\nfunction _objectSpread2(a) {\n  for (var b, c = 1; c < arguments.length; c++) b = null == arguments[c] ? {} : arguments[c], c % 2 ? ownKeys(b, !0).forEach(function (c) {\n    _defineProperty(a, c, b[c]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : ownKeys(b).forEach(function (c) {\n    Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c));\n  });\n\n  return a;\n}\n\nfunction _toConsumableArray(a) {\n  return _arrayWithoutHoles(a) || _iterableToArray(a) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(a) {\n  if (Array.isArray(a)) {\n    for (var b = 0, c = Array(a.length); b < a.length; b++) c[b] = a[b];\n\n    return c;\n  }\n}\n\nfunction _iterableToArray(a) {\n  if (Symbol.iterator in Object(a) || \"[object Arguments]\" === Object.prototype.toString.call(a)) return Array.from(a);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar isCreateSocketValid = function (a) {\n  return \"undefined\" != typeof a && null !== a;\n},\n    isHostValid = function (a) {\n  return \"string\" == typeof a && a && \"\" !== a;\n},\n    isPortValid = function (a) {\n  return \"number\" == typeof a && 1 <= a && 65535 >= a;\n},\n    onCommandValid = function (a) {\n  return \"function\" == typeof a;\n},\n    validate = function (a) {\n  var b = a.createSocket,\n      c = a.host,\n      d = a.port,\n      e = a.onCommand;\n  if (!isCreateSocketValid(b)) throw new Error(\"invalid createSocket function\");\n  if (!isHostValid(c)) throw new Error(\"invalid host\");\n  if (!isPortValid(d)) throw new Error(\"invalid port\");\n  if (!onCommandValid(e)) throw new Error(\"invalid onCommand handler\");\n},\n    logger = function () {\n  return function (a) {\n    return {\n      features: {\n        log: function () {\n          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];\n\n          var e = c && 1 === c.length ? c[0] : c;\n          a.send(\"log\", {\n            level: \"debug\",\n            message: e\n          }, !1);\n        },\n        logImportant: function () {\n          for (var b = arguments.length, c = Array(b), d = 0; d < b; d++) c[d] = arguments[d];\n\n          var e = c && 1 === c.length ? c[0] : c;\n          a.send(\"log\", {\n            level: \"debug\",\n            message: e\n          }, !0);\n        },\n        debug: function (b) {\n          var c = !!(1 < arguments.length && arguments[1] !== void 0) && arguments[1];\n          return a.send(\"log\", {\n            level: \"debug\",\n            message: b\n          }, !!c);\n        },\n        warn: function (b) {\n          return a.send(\"log\", {\n            level: \"warn\",\n            message: b\n          }, !0);\n        },\n        error: function (b, c) {\n          return a.send(\"log\", {\n            level: \"error\",\n            message: b,\n            stack: c\n          }, !0);\n        }\n      }\n    };\n  };\n},\n    image = function () {\n  return function (a) {\n    return {\n      features: {\n        image: function (b) {\n          var c = b.uri,\n              d = b.preview,\n              e = b.filename,\n              f = b.width,\n              g = b.height,\n              h = b.caption;\n          return a.send(\"image\", {\n            uri: c,\n            preview: d,\n            filename: e,\n            width: f,\n            height: g,\n            caption: h\n          });\n        }\n      }\n    };\n  };\n},\n    benchmark = function () {\n  return function (a) {\n    var b = a.startTimer;\n    return {\n      features: {\n        benchmark: function (c) {\n          var d = [],\n              e = b(),\n              f = function (a) {\n            var b = 0 === d.length ? 0 : d[d.length - 1].time,\n                c = e();\n            d.push({\n              title: a,\n              time: c,\n              delta: c - b\n            });\n          };\n\n          d.push({\n            title: c,\n            time: 0,\n            delta: 0\n          });\n\n          var g = function (b) {\n            f(b), a.send(\"benchmark.report\", {\n              title: c,\n              steps: d\n            });\n          };\n\n          return {\n            step: f,\n            stop: g,\n            last: g\n          };\n        }\n      }\n    };\n  };\n},\n    stateResponses = function () {\n  return function (a) {\n    return {\n      features: {\n        stateActionComplete: function (b, c) {\n          var d = !!(2 < arguments.length && arguments[2] !== void 0) && arguments[2];\n          return a.send(\"state.action.complete\", {\n            name: b,\n            action: c\n          }, !!d);\n        },\n        stateValuesResponse: function (b, c) {\n          var d = !(2 < arguments.length && arguments[2] !== void 0) || arguments[2];\n          return a.send(\"state.values.response\", {\n            path: b,\n            value: c,\n            valid: d\n          });\n        },\n        stateKeysResponse: function (b, c) {\n          var d = !(2 < arguments.length && arguments[2] !== void 0) || arguments[2];\n          return a.send(\"state.keys.response\", {\n            path: b,\n            keys: c,\n            valid: d\n          });\n        },\n        stateValuesChange: function (b) {\n          return a.send(\"state.values.change\", {\n            changes: b\n          });\n        },\n        stateBackupResponse: function (b) {\n          return a.send(\"state.backup.response\", {\n            state: b\n          });\n        }\n      }\n    };\n  };\n},\n    apiResponse = function () {\n  return function (a) {\n    return {\n      features: {\n        apiResponse: function (b, c, d) {\n          var e = c && c.status && \"number\" == typeof c.status && 200 <= c.status && 299 >= c.status;\n          a.send(\"api.response\", {\n            request: b,\n            response: c,\n            duration: d\n          }, !e);\n        }\n      }\n    };\n  };\n},\n    clear = function () {\n  return function (a) {\n    return {\n      features: {\n        clear: function () {\n          return a.send(\"clear\");\n        }\n      }\n    };\n  };\n},\n    repl = function () {\n  return function (reactotron) {\n    var myRepls = {};\n    return {\n      onCommand: function (_ref) {\n        var type = _ref.type,\n            payload = _ref.payload;\n        if (\"repl.\" === type.substr(0, 5)) switch (type.substr(5)) {\n          case \"ls\":\n            reactotron.send(\"repl.ls.response\", Object.keys(myRepls));\n            break;\n\n          case \"execute\":\n            reactotron.send(\"repl.execute.response\", function () {\n              return eval(payload);\n            }.call(myRepls));\n        }\n      },\n      features: {\n        repl: function (a, b) {\n          if (!a) throw new Error(\"You must provide a name for your REPL\");\n          if (myRepls[a]) throw new Error(\"You are already REPLing an item with that name\");\n          myRepls[a] = b;\n        }\n      }\n    };\n  };\n},\n    UNDEFINED = \"~~~ undefined ~~~\",\n    NULL = \"~~~ null ~~~\",\n    FALSE = \"~~~ false ~~~\",\n    ZERO = \"~~~ zero ~~~\",\n    EMPTY_STRING = \"~~~ empty string ~~~\",\n    CIRCULAR = \"~~~ Circular Reference ~~~\",\n    ANONYMOUS = \"~~~ anonymous function ~~~\",\n    INFINITY = \"~~~ Infinity ~~~\",\n    NEGATIVE_INFINITY = \"~~~ -Infinity ~~~\";\n\nfunction getFunctionName(a) {\n  var b = a.name;\n  return null === b || void 0 === b || \"\" === b ? ANONYMOUS : \"~~~ \".concat(b, \"() ~~~\");\n}\n\nfunction serialize(a) {\n  var b = !!(1 < arguments.length && arguments[1] !== void 0) && arguments[1],\n      c = [];\n  return JSON.stringify(a, function (a) {\n    return function (d, e) {\n      if (!0 === e) return !0;\n      if (e === 1 / 0) return INFINITY;\n      if (e === -Infinity) return NEGATIVE_INFINITY;\n      if (0 === e) return ZERO;\n      if (void 0 === e) return UNDEFINED;\n      if (null === e) return NULL;\n      if (!1 === e) return FALSE;\n      if (-0 === e) return ZERO;\n      if (\"\" === e) return EMPTY_STRING;\n      if (b && \"object\" === _typeof(e) && e.nativeEvent) return e.nativeEvent;\n\n      switch (_typeof(e)) {\n        case \"string\":\n          return e;\n\n        case \"number\":\n          return e;\n\n        case \"function\":\n          return getFunctionName(e);\n      }\n\n      if (e[Symbol.iterator] && !Array.isArray(e)) return _toConsumableArray(e);\n\n      if (0 < c.length) {\n        var f = c.indexOf(this);\n        ~f ? c.splice(f + 1) : c.push(this), ~c.indexOf(e) && (e = CIRCULAR);\n      } else c.push(e);\n\n      return null == a ? e : a.call(this, d, e);\n    };\n  }(null));\n}\n\nvar defaultPerformanceNow = function () {\n  return Date.now();\n},\n    nativePerformance = \"undefined\" != typeof window && window && (window.performance || window.msPerformance || window.webkitPerformance),\n    performanceNow = defaultPerformanceNow,\n    delta = function (a) {\n  return performanceNow() - a;\n};\n\nglobal.nativePerformanceNow ? performanceNow = global.nativePerformanceNow : nativePerformance && (performanceNow = function () {\n  return nativePerformance.now && nativePerformance.now();\n});\n\nvar start = function () {\n  var a = performanceNow();\n  return function () {\n    return delta(a);\n  };\n},\n    corePlugins = [image(), logger(), benchmark(), stateResponses(), apiResponse(), clear(), repl()],\n    DEFAULT_OPTIONS = {\n  createSocket: null,\n  host: \"localhost\",\n  port: 9090,\n  name: \"reactotron-core-client\",\n  secure: !1,\n  plugins: corePlugins,\n  safeRecursion: !0,\n  onCommand: function () {\n    return null;\n  },\n  onConnect: function () {\n    return null;\n  },\n  onDisconnect: function () {\n    return null;\n  }\n},\n    reservedFeatures = [\"options\", \"connected\", \"socket\", \"plugins\", \"configure\", \"connect\", \"send\", \"use\", \"startTimer\"],\n    isReservedFeature = function (a) {\n  return reservedFeatures.some(function (b) {\n    return b === a;\n  });\n};\n\nfunction emptyPromise() {\n  return Promise.resolve(\"\");\n}\n\n(function (a) {\n  a.String = \"string\";\n})(exports.ArgType || (exports.ArgType = {}));\n\nvar ReactotronImpl = function () {\n  function a() {\n    var b = this;\n    _classCallCheck(this, a), _defineProperty(this, \"options\", Object.assign({}, DEFAULT_OPTIONS)), _defineProperty(this, \"connected\", !1), _defineProperty(this, \"socket\", null), _defineProperty(this, \"plugins\", []), _defineProperty(this, \"sendQueue\", []), _defineProperty(this, \"isReady\", !1), _defineProperty(this, \"lastMessageDate\", new Date()), _defineProperty(this, \"customCommands\", []), _defineProperty(this, \"customCommandLatestId\", 1), _defineProperty(this, \"startTimer\", function () {\n      return start();\n    }), _defineProperty(this, \"send\", function (a) {\n      var c = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},\n          d = !!(2 < arguments.length && void 0 !== arguments[2]) && arguments[2],\n          e = new Date(),\n          f = e.getTime() - b.lastMessageDate.getTime();\n      0 > f && (f = 0), b.lastMessageDate = e;\n      var g = {\n        type: a,\n        payload: c,\n        important: !!d,\n        date: e.toISOString(),\n        deltaTime: f\n      },\n          h = serialize(g, b.options.proxyHack);\n      if (b.isReady) try {\n        b.socket.send(h);\n      } catch (a) {\n        b.isReady = !1, console.log(\"An error occured communicating with reactotron. Please reload your app\");\n      } else b.sendQueue.push(h);\n    });\n  }\n\n  return _createClass(a, [{\n    key: \"configure\",\n    value: function () {\n      var a = this,\n          b = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},\n          c = Object.assign({}, this.options, b);\n      return validate(c), this.options = c, Array.isArray(this.options.plugins) && this.options.plugins.forEach(function (b) {\n        return a.use(b);\n      }), this;\n    }\n  }, {\n    key: \"close\",\n    value: function () {\n      this.connected = !1, this.socket && this.socket.close && this.socket.close();\n    }\n  }, {\n    key: \"connect\",\n    value: function () {\n      var a = this;\n      this.connected = !0;\n\n      var b = this.options,\n          c = b.createSocket,\n          d = b.secure,\n          e = b.host,\n          f = b.environment,\n          g = b.port,\n          i = b.name,\n          j = b.client,\n          k = void 0 === j ? {} : j,\n          l = b.getClientId,\n          m = this.options,\n          n = m.onCommand,\n          o = m.onConnect,\n          p = m.onDisconnect,\n          q = d ? \"wss\" : \"ws\",\n          r = c(\"\".concat(q, \"://\").concat(e, \":\").concat(g)),\n          s = function () {\n        o && o(), a.plugins.forEach(function (a) {\n          return a.onConnect && a.onConnect();\n        });\n        (l || emptyPromise)().then(function (b) {\n          for (a.isReady = !0, a.send(\"client.intro\", _objectSpread2({\n            environment: f\n          }, k, {\n            name: i,\n            clientId: b,\n            reactotronCoreClientVersion: \"2.8.5\"\n          })); 0 < a.sendQueue.length;) {\n            var c = a.sendQueue[0];\n            a.sendQueue = a.sendQueue.slice(1), a.socket.send(c);\n          }\n        });\n      },\n          t = function () {\n        a.isReady = !1, p && p(), a.plugins.forEach(function (a) {\n          return a.onDisconnect && a.onDisconnect();\n        });\n      },\n          u = function (b) {\n        var c = JSON.parse(b);\n        n && n(c), a.plugins.forEach(function (a) {\n          return a.onCommand && a.onCommand(c);\n        }), \"custom\" === c.type ? a.customCommands.filter(function (a) {\n          return \"string\" == typeof c.payload ? a.command === c.payload : a.command === c.payload.command;\n        }).forEach(function (a) {\n          return a.handler(\"object\" === _typeof(c.payload) ? c.payload.args : void 0);\n        }) : \"setClientId\" === c.type && a.options.setClientId && a.options.setClientId(c.payload);\n      };\n\n      return r.on ? (r.on(\"open\", s), r.on(\"close\", t), r.on(\"message\", u)) : (r.onopen = s, r.onclose = t, r.onmessage = function (a) {\n        return u(a.data);\n      }), this.socket = r, this;\n    }\n  }, {\n    key: \"display\",\n    value: function () {\n      var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},\n          b = a.name,\n          c = a.value,\n          d = a.preview,\n          e = a.image,\n          f = a.important;\n      this.send(\"display\", {\n        name: b,\n        value: c || null,\n        preview: d || null,\n        image: e || null\n      }, void 0 !== f && f);\n    }\n  }, {\n    key: \"reportError\",\n    value: function (a) {\n      this.error(a);\n    }\n  }, {\n    key: \"use\",\n    value: function (a) {\n      var b = this;\n      if (\"function\" != typeof a) throw new Error(\"plugins must be a function\");\n      var c = a.bind(this)(this);\n      if (\"object\" !== _typeof(c)) throw new Error(\"plugins must return an object\");\n\n      if (c.features) {\n        if (\"object\" !== _typeof(c.features)) throw new Error(\"features must be an object\");\n\n        var d = function (a) {\n          var d = c.features[a];\n          if (\"function\" != typeof d) throw new Error(\"feature \".concat(a, \" is not a function\"));\n          if (isReservedFeature(a)) throw new Error(\"feature \".concat(a, \" is a reserved name\"));\n          b[a] = d;\n        };\n\n        Object.keys(c.features).forEach(function (a) {\n          return d(a);\n        });\n      }\n\n      return this.plugins.push(c), c.onPlugin && \"function\" == typeof c.onPlugin && c.onPlugin.bind(this)(this), this;\n    }\n  }, {\n    key: \"onCustomCommand\",\n    value: function (a, b) {\n      var c,\n          d,\n          e,\n          f,\n          g,\n          h = this;\n      if (\"string\" == typeof a ? (c = a, d = b) : (c = a.command, d = a.handler, e = a.title, f = a.description, g = a.args), !c) throw new Error(\"A command is required\");\n      if (!d) throw new Error(\"A handler is required for command \\\"\".concat(c, \"\\\"\"));\n      var i = this.customCommands.filter(function (a) {\n        return a.command === c;\n      });\n\n      if (0 < i.length && i.forEach(function (a) {\n        console.log(a), h.customCommands = h.customCommands.filter(function (b) {\n          return b.id !== a.id;\n        }), h.send(\"customCommand.unregister\", {\n          id: a.id,\n          command: a.command\n        });\n      }), g) {\n        var j = [];\n        g.forEach(function (a) {\n          if (!a.name) throw new Error(\"A arg on the command \\\"\".concat(c, \"\\\" is missing a name\"));\n          if (-1 < j.indexOf(a.name)) throw new Error(\"A arg with the name \\\"\".concat(a.name, \"\\\" already exists in the command \\\"\").concat(c, \"\\\"\"));\n          j.push(a.name);\n        });\n      }\n\n      var k = {\n        id: this.customCommandLatestId,\n        command: c,\n        handler: d,\n        title: e,\n        description: f,\n        args: g\n      };\n      return this.customCommandLatestId += 1, this.customCommands.push(k), this.send(\"customCommand.register\", {\n        id: k.id,\n        command: k.command,\n        title: k.title,\n        description: k.description,\n        args: k.args\n      }), function () {\n        h.customCommands = h.customCommands.filter(function (a) {\n          return a.id !== k.id;\n        }), h.send(\"customCommand.unregister\", {\n          id: k.id,\n          command: k.command\n        });\n      };\n    }\n  }]), a;\n}();\n\nfunction createClient(a) {\n  var b = new ReactotronImpl();\n  return b.configure(a), b;\n}\n\nexports.ReactotronImpl = ReactotronImpl, exports.corePlugins = corePlugins, exports.createClient = createClient;","map":null,"metadata":{},"sourceType":"script"}