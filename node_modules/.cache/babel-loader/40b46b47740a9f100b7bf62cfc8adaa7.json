{"ast":null,"code":"import _defineProperty from \"/Users/girardi.gui/Desktop/React-Class-Components/e-commerce-class-component/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/girardi.gui/Desktop/React-Class-Components/e-commerce-class-component/src/pages/Home/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { ProductList } from './styles';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: []\n    };\n\n    this.handleAddProcuts = id => {\n      const addToCartRequest = this.props.addToCartRequest;\n      addToCartRequest(id);\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products');\n    const data = response.data.map(product => _objectSpread({}, product, {\n      priceFormatted: formatPrice(product.price)\n    }));\n    this.setState({\n      products: data\n    });\n  }\n\n  render() {\n    const products = this.state.products;\n    const amount = this.props.amount;\n    return React.createElement(ProductList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, products.map(product => React.createElement(\"li\", {\n      key: product.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: product.image,\n      alt: product.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, product.title), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, product.priceFormatted), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleAddProcuts(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(MdShoppingCart, {\n      size: 16,\n      color: \"#FFF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), amount[product.id] || 0), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Add to cart\")))));\n  }\n\n} // convert state into props.\n\n\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n    return amount;\n  }, {})\n}); // Convets actions into props.\n\n\nconst mapDispatchToProps = dispatch => bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/girardi.gui/Desktop/React-Class-Components/e-commerce-class-component/src/pages/Home/index.js"],"names":["React","Component","connect","bindActionCreators","MdShoppingCart","ProductList","formatPrice","api","CartActions","Home","state","products","handleAddProcuts","id","addToCartRequest","props","componentDidMount","response","get","data","map","product","priceFormatted","price","setState","render","amount","image","title","mapStateToProps","cart","reduce","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdShoppingCart } from 'react-icons/md';\nimport { ProductList } from './styles';\nimport { formatPrice } from '../../util/format';\nimport api from '../../services/api';\nimport * as CartActions from '../../store/modules/cart/actions';\n\nclass Home extends Component {\n  state = {\n    products: [],\n  };\n\n  async componentDidMount() {\n    const response = await api.get('products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n\n    this.setState({ products: data })\n  }\n\n  handleAddProcuts = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id)\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amount } = this.props;\n\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n            <button type=\"button\" onClick={() => this.handleAddProcuts(product.id)}>\n              <div>\n                <MdShoppingCart size={16} color=\"#FFF\" />\n                {amount[product.id] || 0}\n              </div>\n              <span>Add to cart</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\n// convert state into props.\nconst mapStateToProps = state => ({\n  amount: state.cart.reduce((amount, product) => {\n    (amount[product.id] = product.amount);\n    return amount;\n  }, {})\n});\n\n// Convets actions into props.\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n"]},"metadata":{},"sourceType":"module"}