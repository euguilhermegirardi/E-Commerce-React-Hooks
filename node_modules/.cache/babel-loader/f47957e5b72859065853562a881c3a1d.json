{"ast":null,"code":"// Initial configuration of REDUX.\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga'; // To connect the Redux with REACTOTRON.\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nconst enhancer = process.env.NODE_ENV === 'development' ? compose(console.tron.createEnhancer(), applyMiddleware(sagaMiddleware)) : applyMiddleware(sagaMiddleware);\nconst store = createStore(rootReducer, enhancer);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/girardi.gui/Desktop/React-Class-Components/e-commerce-class-component/src/store/index.js"],"names":["createStore","applyMiddleware","compose","createSagaMiddleware","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","enhancer","createEnhancer","store","run"],"mappings":"AAAA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB,C,CAEA;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAChBC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADgB,GAEhB,IAFJ;AAIA,MAAMC,cAAc,GAAGV,oBAAoB,CAAC;AAC1CG,EAAAA;AAD0C,CAAD,CAA3C;AAIA,MAAMQ,QAAQ,GAAGP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACbP,OAAO,CACPQ,OAAO,CAACC,IAAR,CAAaI,cAAb,EADO,EAEPd,eAAe,CAACY,cAAD,CAFR,CADM,GAKbZ,eAAe,CAACY,cAAD,CALnB;AAOA,MAAMG,KAAK,GAAGhB,WAAW,CAACI,WAAD,EAAcU,QAAd,CAAzB;AAEAD,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,eAAeW,KAAf","sourcesContent":["// Initial configuration of REDUX.\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\n// To connect the Redux with REACTOTRON.\nconst sagaMonitor = process.env.NODE_ENV === 'development'\n  ? console.tron.createSagaMonitor()\n  : null;\n\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer = process.env.NODE_ENV === 'development'\n  ? compose(\n    console.tron.createEnhancer(),\n    applyMiddleware(sagaMiddleware)\n  )\n  : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}